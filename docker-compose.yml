# Docker-compose template

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_USER=chronos
      - POSTGRES_PASSWORD=chronos_password
      - POSTGRES_DB=chronos
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    command: >
      postgres 
      -c shared_preload_libraries=timescaledb
      -c max_connections=100
      -c shared_buffers=1GB
    volumes:
      - ts_data:/var/lib/postgresql/data
      - ./services/chronos-backend/init-timescale.sql:/docker-entrypoint-initdb.d/init-timescale.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chronos -d chronos"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5-community
    environment:
      - NEO4J_AUTH=neo4j/chronos_password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
    ports:
      - "7474:7474"
      - "7687:7687"

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=chronos
      - MONGO_INITDB_ROOT_PASSWORD=chronos_password
      - MONGO_INITDB_DATABASE=chronos
    volumes:
      - mongo_data:/data/db
      - ./services/chronos-backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd --advertise-client-urls=http://127.0.0.1:2379 --listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    ports:
      - "2379:2379"
      - "2380:2380"

  milvus:
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    ports:
      - "19530:19530"
    environment:
      ETCD_ENDPOINTS: etcd:2379
    volumes:
      - milvus_data:/var/lib/milvus
    depends_on:
      - etcd

  minio:
    image: minio/minio:RELEASE.2024-02-24T17-11-14Z
    environment:
      - MINIO_ROOT_USER=chronos
      - MINIO_ROOT_PASSWORD=chronos_password
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 chronos chronos_password;
      mc mb myminio/chronos-media;
      mc anonymous set public myminio/chronos-media;
      exit 0;
      "

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  ts_data:
  neo4j_data:
  mongo_data:
  milvus_data:
  minio_data:
  redis_data:
  etcd_data:
